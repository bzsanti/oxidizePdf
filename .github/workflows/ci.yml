name: CI

on:
  push:
    branches: [ main, develop, develop_santi ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust == 'beta' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        # beta temporarily disabled - needs API updates for benchmarks
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Install Tesseract OCR (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y tesseract-ocr libtesseract-dev

      - name: Install Tesseract OCR (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install tesseract

      - name: Install Tesseract OCR (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install tesseract
          echo "C:\Program Files\Tesseract-OCR" >> $env:GITHUB_PATH

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all -- -D warnings

      - name: Build
        run: cargo build --all --verbose

      - name: Run tests (macOS beta - lib only)
        if: matrix.os == 'macos-latest' && matrix.rust == 'beta'
        run: cargo test --lib --verbose

      - name: Run tests (all others)
        if: matrix.os != 'macos-latest' || matrix.rust != 'beta'
        run: cargo test --all --verbose

      - name: Build documentation
        run: cargo doc --all --no-deps
